version: "3.9"
services:
  postgres:
    image: postgres:14
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-myuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
      POSTGRES_DB: ${POSTGRES_DB:-resolver}

  redis:
    image: redis:latest
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-myredispassword}

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_JVMFLAGS: "-Xmx2g -Xms2g" # Allocate 2GB heap memory

  kafka-cluster:
    image: wurstmeister/kafka
    container_name: kafka-cluster
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-cluster
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  worker:
    build:
      context: ../worker-service
      dockerfile: ../worker-service/Dockerfile
    container_name: worker-service
    restart: always
    ports:
      - "9090:8080"
    volumes:
      - ./config/worker-config.yaml:/app/config.yaml
    depends_on:
      - kafka-cluster

  agent:
    build:
      context: ../agent-service
      dockerfile: ../agent-service/.docker/Dockerfile
    container_name: agent-service
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./config/agent-config.yaml:/etc/agent-service/config.yaml
    depends_on:
      - kafka-cluster

  data-provider:
    build:
      context: ../data-provider-service
      dockerfile: ../data-provider-service/.docker/Dockerfile
    container_name: data-provider-service
    restart: always
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-myuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-myredispassword}
    volumes:
      - ./config/data-provider-config.yaml:/etc/data-provider-service/config.yaml
    depends_on:
      - postgres
      - redis

  api:
    build:
      context: ../api-service
      dockerfile: ../api-service/.docker/Dockerfile
    container_name: api-service
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./config/api-config.yaml:/etc/api-service/config.yaml
    depends_on:
      - worker
      - data-provider
      - agent
  
  web-ui:
    build:
      context: ../web-ui
      dockerfile: ../web-ui/.docker/Dockerfile
    container_name: web-ui
    restart: always
    environment:
      - BASE_REST_API_URL=http://api:8080/api/v1
    ports:
      - "80:3000"
    depends_on:
      - api
